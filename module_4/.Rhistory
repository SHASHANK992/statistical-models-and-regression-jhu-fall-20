H <- H_calc(X = X)
y_hat <- y_hat_calc(H = h, y = y)
y <- car_data[,1]; x1 <- car_data[,2]; x6 <- car_data[,7]; ones <- rep(1, n)
X <- cbind(ones, x1, x6)
beta_hat <- beta_hat_calc(X = X, y = y)
H <- H_calc(X = X)
y_hat <- y_hat_calc(H = h, y = y)
y_hat <- y_hat_calc(H = H, y = y)
e <- e_calc(y = y, y_hat = y_hat)
e
t(e) %*% e
beta_hat
sum(y)^2
SS_Res_calc <- function(y, beta_hat, X) {
SS_Res <- t(y) %*% y - t(beta_hat) %*% t(X) %*% y
return(SS_Res)
}
SS_T_calc <- function(y) {
n <- length(y)
SS_T <- t(y) %*% y - (sum(y)^2) / n
return(SS_T)
}
SS_R_calc <- function(beta_hat, X, y) {
n <- length(y)
SS_R <- t(beta_hat) %*% t(X) %*% y - (sum(y)^2) / n
return(SS_R)
}
SS_Res <- SS_R_calc(beta_hat = beta_hat, X = X, y = y)
SS_T <- SS_T_calc(y = y)
SS_R <- SS_R_calc(beta_hat = beta_hat, X = X, y = y)
SS_Res + SS_R
SS_T
SS_T + SS_R
SS_Res
SS_T + SS_R
SS_Res
SS_T + SS_R
### a
# Subset data
y <- car_data[,1]; x1 <- car_data[,2]; x6 <- car_data[,7]; ones <- rep(1, n)
X <- cbind(ones, x1, x6)
beta_hat <- beta_hat_calc(X = X, y = y)
H <- H_calc(X = X)
y_hat <- y_hat_calc(H = H, y = y)
e <- e_calc(y = y, y_hat = y_hat)
t(e) %*% e # 148.2573
### b
SS_Res_calc <- function(y, beta_hat, X) {
SS_Res <- t(y) %*% y - t(beta_hat) %*% t(X) %*% y
return(SS_Res)
}
SS_T_calc <- function(y) {
n <- length(y)
SS_T <- t(y) %*% y - (sum(y)^2) / n
return(SS_T)
}
SS_R_calc <- function(beta_hat, X, y) {
n <- length(y)
SS_R <- t(beta_hat) %*% t(X) %*% y - (sum(y)^2) / n
return(SS_R)
}
SS_Res <- SS_R_calc(beta_hat = beta_hat, X = X, y = y)
SS_T <- SS_T_calc(y = y)
SS_R <- SS_R_calc(beta_hat = beta_hat, X = X, y = y)
SS_Res
SS_T + SS_R
y
sum(y)
sum(y)^2
### b
SS_Res_calc <- function(y, beta_hat, X) {
SS_Res <- t(y) %*% y - t(beta_hat) %*% t(X) %*% y
return(SS_Res)
}
SS_T_calc <- function(y) {
n <- length(y)
SS_T <- t(y) %*% y - ((sum(y)^2) / n)
return(SS_T)
}
SS_R_calc <- function(beta_hat, X, y) {
n <- length(y)
SS_R <- t(beta_hat) %*% t(X) %*% y - ((sum(y)^2) / n)
return(SS_R)
}
SS_Res <- SS_R_calc(beta_hat = beta_hat, X = X, y = y)
SS_T <- SS_T_calc(y = y)
SS_R <- SS_R_calc(beta_hat = beta_hat, X = X, y = y)
SS_Res
SS_T + SS_R
length(y)
### 6
set.seed(1); n <- 22 # Sample rows
random_rows <- sort(sample(x = seq(1, 32), size = n, replace = FALSE))
na_rows <- c(23, 25)
random_rows <- random_rows[!random_rows %in% na_rows]
random_rows <- c(random_rows, 3, 6) # Ignore NA rows
# Create table subset
table_b3 <- MPV::table.b3; car_data <- table_b3[random_rows,]
car_data$index <- as.numeric(row.names(car_data))
car_data <- car_data[order(car_data$index),]
car_data$index <- NULL # Fix the data set
car_data
### a
# Subset data
y <- car_data[,1]; x1 <- car_data[,2]; x6 <- car_data[,7]; ones <- rep(1, n)
y
x1
x6
X <- cbind(ones, x1, x6)
y
X
beta_hat <- beta_hat_calc(X = X, y = y)
beta_hat
H <- H_calc(X = X)
H
y_hat <- y_hat_calc(H = H, y = y)
y_hat
anova
?anova
anova(object = X)
X
type(X)
dtype(X)
typeof(X)
y
### b
SS_Res_calc <- function(y, beta_hat, X) {
SS_Res <- (t(y) %*% y) - (t(beta_hat) %*% t(X) %*% y)
return(SS_Res)
}
SS_Res <- SS_R_calc(beta_hat = beta_hat, X = X, y = y)
SS_Res
SS_T_calc <- function(y) {
n <- length(y)
SS_T <- (t(y) %*% y) - ((sum(y)^2) / n)
return(SS_T)
}
SS_R_calc <- function(beta_hat, X, y) {
n <- length(y)
SS_R <- (t(beta_hat) %*% t(X) %*% y) - ((sum(y)^2) / n)
return(SS_R)
}
SS_Res <- SS_R_calc(beta_hat = beta_hat, X = X, y = y)
SS_T <- SS_T_calc(y = y)
SS_R <- SS_R_calc(beta_hat = beta_hat, X = X, y = y)
SS_Res
SS_T + SS_R
beta_hat_calc <- function(X, y) {
beta_hat <- solve(t(X) %*% X) %*% t(X) %*% y
return(beta_hat)
}
H_calc <- function(X) {
H <- X %*% solve(t(X) %*% X) %*% t(X)
return(H)
}
y_hat_calc <- function(H, y) {
y_hat <- H %*% y
return(y_hat)
}
### 6
set.seed(1); n <- 22 # Sample rows
random_rows <- sort(sample(x = seq(1, 32), size = n, replace = FALSE))
na_rows <- c(23, 25)
random_rows <- random_rows[!random_rows %in% na_rows]
random_rows <- c(random_rows, 3, 6) # Ignore NA rows
# Create table subset
table_b3 <- MPV::table.b3; car_data <- table_b3[random_rows,]
car_data$index <- as.numeric(row.names(car_data))
car_data <- car_data[order(car_data$index),]
car_data$index <- NULL # Fix the data set
### a
# Subset data
y <- car_data[,1]; x1 <- car_data[,2]; x6 <- car_data[,7]; ones <- rep(1, n)
X <- cbind(ones, x1, x6)
beta_hat <- beta_hat_calc(X = X, y = y)
H <- H_calc(X = X)
y_hat <- y_hat_calc(H = H, y = y)
e <- e_calc(y = y, y_hat = y_hat)
### b
SS_Res_calc <- function(y, beta_hat, X) {
SS_Res <- (t(y) %*% y) - (t(beta_hat) %*% t(X) %*% y)
return(SS_Res)
}
SS_T_calc <- function(y) {
n <- length(y)
SS_T <- (t(y) %*% y) - ((sum(y)^2) / n)
return(SS_T)
}
SS_R_calc <- function(beta_hat, X, y) {
n <- length(y)
SS_R <- (t(beta_hat) %*% t(X) %*% y) - ((sum(y)^2) / n)
return(SS_R)
}
SS_Res <- SS_R_calc(beta_hat = beta_hat, X = X, y = y)
SS_T <- SS_T_calc(y = y)
SS_R <- SS_R_calc(beta_hat = beta_hat, X = X, y = y)
SS_Res
SS_T + SS_R
SS_T
SS_R
SS_T - SS_R
SS_Res
SS_Res == SS_T - SS_R
SS_Res
SS_Res; SS_T - SS_R
SS_Res
test_X <- cbind(x1, x6)
test_X
test_X <- cbind(y, x1, x6)
head(test_X)
test_data <- cbind(y, x1, x6)
aov(formula = y~., data = test_data)
test_data <- data.frame(cbind(y, x1, x6))
head(test_data)
typeof(test_data)
aov(formula = y~., data = test_data)
test_aov <_ aov(formula = y~., data = test_data)
test_aov <- aov(formula = y~., data = test_data)
summary(test_aov)
SS_T
SS_R
SS_Res
SS_Res <- SS_Res_calc(beta_hat = beta_hat, X = X, y = y)
SS_T <- SS_T_calc(y = y)
SS_R <- SS_R_calc(beta_hat = beta_hat, X = X, y = y)
SS_Res == SS_T - SS_R
SS_Res; SS_T - SS_R
n
SS_R
SS_Res; SS_T;  SS_R
k <- 2; n - k - 1; n - 1
5550.8166/2
233.7260/22
MS_R <- SS_R / k
MS_Res <- SS_Res / (n - k - 1)
MS_R
MS_Res
SS_Res; SS_T;  SS_R
MS_R
MS_Res
F <- MS_R / MS_Res
F
alpha <- 0.1
qf(p = (1 - alpha), df1 = k, df2 = (n - k - 1))
?qt
pf(q = F, df1 = k, df2 = (n - k - 1))
pf(q = F, df1 = k, df2 = (n - k - 1), lower.tail = FALSE)
qf(p = (1 - alpha), df1 = k, df2 = (n - k - 1))
alpha <- 0.01
qf(p = (1 - alpha), df1 = k, df2 = (n - k - 1))
pf(q = F, df1 = k, df2 = (n - k - 1), lower.tail = FALSE)
p
k
### c
p <- k + 1
r_squared <-
adj_r_squared <- 1 - ((SS_Res / (n - p)) / (SS_T / (n - 1)))
adj_r_squared
r_squared <- SS_R / SS_T
r_squared == (1 - SS_Res / SS_T)
### c
p <- k + 1
r_squared <- SS_R / SS_T
adj_r_squared <- 1 - ((SS_Res / (n - p)) / (SS_T / (n - 1)))
r_squared
adj_r_squared
r_squared_calc <- function(SS_R, SS_T) {
r_squared <- SS_R / SS_T
return(r_squared)
}
adj_r_squared_calc <- function(SS_Res, SS_T, n, p) {
adj_r_squared <- 1 - ((SS_Res / (n - p)) / (SS_T / (n - 1)))
return(adj_r_squared)
}
r_squared <- r_squared_calc(SS_R = SS_R, SS_T = SS_T) # 0.8305071
adj_r_squared <- adj_r_squared_calc(
SS_Res = SS_Res, SS_T = SS_T, n = n, p = p) # 0.8126658
r_squared
adj_r_squared
### 2.4
X <- cbind(ones, x1)
beta_hat <- beta_hat_calc(X = X, y = y)
H <- H_calc(X = X)
y_hat <- y_hat_calc(H = H, y = y)
SS_Res <- SS_Res_calc(beta_hat = beta_hat, X = X, y = y)
SS_T <- SS_T_calc(y = y)
SS_R <- SS_R_calc(beta_hat = beta_hat, X = X, y = y)
SS_Res == SS_T - SS_R
### 2.4
k <- 1; p <- k + 1
X <- cbind(ones, x1)
beta_hat <- beta_hat_calc(X = X, y = y)
H <- H_calc(X = X)
y_hat <- y_hat_calc(H = H, y = y)
SS_Res <- SS_Res_calc(beta_hat = beta_hat, X = X, y = y)
SS_T <- SS_T_calc(y = y)
SS_R <- SS_R_calc(beta_hat = beta_hat, X = X, y = y)
r_squared <- r_squared_calc(SS_R = SS_R, SS_T = SS_T) # 0.8305071
adj_r_squared <- adj_r_squared_calc(
SS_Res = SS_Res, SS_T = SS_T, n = n, p = p) # 0.8126658
r_squared
adj_r_squared
0.8305071
0.8126658
### 6
set.seed(1); n <- 22 # Sample rows
random_rows <- sort(sample(x = seq(1, 32), size = n, replace = FALSE))
na_rows <- c(23, 25)
random_rows <- random_rows[!random_rows %in% na_rows]
random_rows <- c(random_rows, 3, 6) # Ignore NA rows
# Create table subset
table_b3 <- MPV::table.b3; car_data <- table_b3[random_rows,]
car_data$index <- as.numeric(row.names(car_data))
car_data <- car_data[order(car_data$index),]
car_data$index <- NULL # Fix the data set
### a
# Subset data
y <- car_data[,1]; x1 <- car_data[,2]; x6 <- car_data[,7]; ones <- rep(1, n)
X <- cbind(ones, x1, x6)
beta_hat <- beta_hat_calc(X = X, y = y)
H <- H_calc(X = X)
y_hat <- y_hat_calc(H = H, y = y)
### b
SS_Res_calc <- function(y, beta_hat, X) {
SS_Res <- (t(y) %*% y) - (t(beta_hat) %*% t(X) %*% y)
return(SS_Res)
}
SS_T_calc <- function(y) {
n <- length(y)
SS_T <- (t(y) %*% y) - ((sum(y)^2) / n)
return(SS_T)
}
SS_R_calc <- function(beta_hat, X, y) {
n <- length(y)
SS_R <- (t(beta_hat) %*% t(X) %*% y) - ((sum(y)^2) / n)
return(SS_R)
}
SS_Res <- SS_Res_calc(beta_hat = beta_hat, X = X, y = y)
SS_T <- SS_T_calc(y = y)
SS_R <- SS_R_calc(beta_hat = beta_hat, X = X, y = y)
SS_Res == SS_T - SS_R
SS_Res; SS_T;  SS_R # 148.2573, 874.7109, 726.4536
k <- 2; n - k - 1; n - 1
MS_R <- SS_R / k # 363.2268
MS_Res <- SS_Res / (n - k - 1) # 7.803015
F <- MS_R / MS_Res # 46.54955
alpha <- 0.01
qf(p = (1 - alpha), df1 = k, df2 = (n - k - 1))
### c
p <- k + 1
r_squared_calc <- function(SS_R, SS_T) {
r_squared <- SS_R / SS_T
return(r_squared)
}
adj_r_squared_calc <- function(SS_Res, SS_T, n, p) {
adj_r_squared <- 1 - ((SS_Res / (n - p)) / (SS_T / (n - 1)))
return(adj_r_squared)
}
r_squared <- r_squared_calc(SS_R = SS_R, SS_T = SS_T) # 0.8305071
adj_r_squared <- adj_r_squared_calc(
SS_Res = SS_Res, SS_T = SS_T, n = n, p = p) # 0.8126658
### d
beta_hat
### d
beta_hat_1 <- beta_hat[2]
beta_hat_1
X
solve(t(X) %*% X)
C <- solve(t(X) %*% X)
C
C[2,2]
C_11 <- C[2,2]
MS_Res
sigma_hat_squared <- MS_Res
alpha <- 0.01
alpha <- 0.05
p
n
t_stat <- qt(p = (1 - alpha), df = n - p)
t_stat
t_stat <- qt(p = (1 - alpha / 2), df = n - p)
t_stat
qt(p = (alpha / 2), df = n - p)
CI <- beta_hat_1 - t_stat * sqrt(sigma_hat_squared * C)
CI <- beta_hat_1 - t_stat * sqrt(sigma_hat_squared * C_11)
CI
n-p
C_11
C
CI
x1
head(car_data)
beta_hat
beta_hat_6 <- beta_hat[3]
C
C_66 <- C[3,3]
test_stat_6 <- beta_hat_6 / sqrt(sigma_hat_squared * C_66)
test_stat_1
### e
test_stat_1 <- beta_hat_1 / sqrt(sigma_hat_squared * C_11)
test_stat_1
test_stat_6
n
k
t_stat <- qt(p = (1 - alpha / 2), df = (n - k - 1))
t_stat
n-k-1
n-p
alpha <- 0.01
t_stat <- qt(p = (1 - alpha / 2), df = n - p)
t_stat
beta_hat
beta_hat
### f
sample_vec <- c(1, 275, 2)
### f
x_0 <- c(1, 275, 2)
fitted_value <- t(x_0) %*% beta_hat
fitted_value
C
y_hat_0 <- t(x_0) %*% beta_hat
var_y_hat_0 <- sigma_hat_squared * (t(x_0) %*% C %*% x_0)
var_y_hat_0
test_stat_0 <- qt(p = (1 - alpha / 2), df = n - p)
CI_0 <- y_hat_0 - test_stat_0 * sqrt(var_y_hat_0)
CI_0 <- c(y_hat_0 - test_stat_0 * sqrt(var_y_hat_0),
y_hat_0 + test_stat_0 * sqrt(var_y_hat_0))
CI_0
beta_hat_1 <- beta_hat[2]
C <- solve(t(X) %*% X); C_11 <- C[2,2]
sigma_hat_squared <- MS_Res
alpha <- 0.05
t_stat <- qt(p = (1 - alpha / 2), df = n - p)
CI <- c(beta_hat_1 - t_stat * sqrt(sigma_hat_squared * C_11),
beta_hat_1 + t_stat * sqrt(sigma_hat_squared * C_11))
CI
### g
x_0 <- c(1, 257, 2)
y_hat_0 <- t(x_0) %*% beta_hat
y_hat_0
var_y_hat_0 <- sigma_hat_squared * (t(x_0) %*% C %*% x_0)
var_y_hat_0
var_y_hat_0 <- sigma_hat_squared * (1 + (t(x_0) %*% C %*% x_0))
var_y_hat_0
test_stat_0
### g
x_0 <- c(1, 257, 2)
y_hat_0 <- t(x_0) %*% beta_hat
var_y_hat_0 <- sigma_hat_squared * (1 + (t(x_0) %*% C %*% x_0))
test_stat_0 <- qt(p = (1 - alpha / 2), df = n - p)
PI_0 <- c(y_hat_0 - test_stat_0 * sqrt(var_y_hat_0),
y_hat_0 + test_stat_0 * sqrt(var_y_hat_0))
PI_0
### g
x_0 <- c(1, 257, 2)
y_hat_0 <- t(x_0) %*% beta_hat
car
cars
head(cars)
X = cbind(1, cars)
X
H = X %*% solve(t(X) %*% X) %*% t(X)
class(X)
X = as.matrix(X)
H = X %*% solve(t(X) %*% X) %*% t(X)
H
dim(H)
dim(cars)
n = 50
ones = rep(1, 50)
ones
H %*% oens
H %*% ones
H %*% cars[,1]
cbind(H %*% cars[,1], cars[,1])
a = cars
a
names(a)
a$dist2 = a$dist*2
a
names(a)
lm(speed ~ ., data = a)
nrow(mtcars)
X <- cbind(rep(1, nrow(mtcars)), mtcars[,c(1,2)])
X
n <- nrow(mtcars)
X <- cbind(rep(1, n), mtcars[,c(1,2)])
n <- nrow(mtcars)
X <- cbind(rep(1, n), mtcars[,c(1,2)])
X[,1]
X[,2]
range(X[,2])
range(X[,3])
plot(1,1)
plot(range(X[,2]), range(X[,3]))
X[,c(2,3)]
plot(X[,c(2,3)])
rbind(X[,c(2,3)], c(0,0))
plot(rbind(X[,c(2,3)], c(0,0)))
plot(X[,c(2,3)], yaxs = "i")
plot(X[,c(2,3)], ylim = c(0, 10), yaxs = "i")
plot(X[,c(2,3)], xlim = c(0, 35), ylim = c(0, 10), yaxs = "i")
n <- nrow(mtcars)
x1 <- mtcars[,1]; x2 <- mtcars[,2]
y <- 3 * x1 + 0.2 * x2
n <- nrow(mtcars)
x1 <- mtcars[,1]; x2 <- mtcars[,2]
y <- 3 * x1 + 0.2 * x2
y
ones <- rep(1, n)
y <- ones +  3 * x1 + 0.2 * x2
y
